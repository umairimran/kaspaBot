Satoshi Nakamoto invented Bitcoin in 2008, creating for the first time a trustless decentralized money. Despite its many innovations, blockchain technology has some issues. This discussion will investigate some of these issues, particularly focusing on how Bitcoin forks work and how they affect its security.

Bitcoin miners always mine blocks that point to the tip of the current chain. However, the situation can be more complex. The Bitcoin network occasionally experiences “forks,” where a miner must decide between competing chains. For example, if a miner has a chain of four blocks A, B, C, D and then receives a new chain with blocks E and F, the miner must decide whether to extend block D or block F. The simplest solution would be to ignore blocks that do not extend the current tip, but this introduces another problem: what happens if a miner that was offline when blocks A-D were created receives blocks E and F first? If it follows the previous rule, it will mine on top of block F, while all other miners ignore its blocks, resulting in a split from the rest of the network.

To prevent such problems, a mining rule is needed that can objectively decide between two chains, even if the miner was not present at the time of their creation. This is why miners follow the longest-chain rule, which states that an honest miner should always mine on the longest chain. In the example above, all miners (both up-to-date miners and later joiners) will mine on top of block D.

The only exception to this rule occurs when there are two or more chains of equal length. This situation usually arises when one miner mines block D and another miner mines block E before being aware of block D's existence. Although this occurrence is rare, as the average block rate in the Bitcoin network is 10 minutes, it does happen from time to time. When this situation occurs, each miner will mine on the first tip they have seen. This is only a temporary condition that will be resolved once one of the miners successfully mines on top of one of the chains, at which point the longest-chain rule will be applied again.

The blockchain is called a chain and not a tree for a reason: the vast majority of Bitcoin blocks belong to the main chain, and forks happen very rarely. The fork rate is influenced by two variables: the block creation rate and the network delay. The network delay is the time it takes for a block to be known to all miners. Bitcoin’s network delay is about 1 second, while a new block is created on average every 600 seconds (10 minutes). Because the average block creation time is 600 times greater than the network delay, it is highly unlikely that a block will be mined while another block is still being propagated.

The longest-chain rule makes the network vulnerable to history rewrites if an attacker mines a chain that is longer than the honest chain after the fact. A history rewrite attack, commonly referred to as a reorganization (reorg), can be utilized for fraudulent payments. For example, if Chuck pays Alice 2 BTC for a car and the transaction is included in block D, Alice will give him the car. However, if Chuck later mines two consecutive blocks E and F on top of block C, using the same funds to pay for himself, all miners will abandon block D and start extending block F, resulting in a double spend attack.

To protect against such an attack, Alice can wait for a few blocks after block D before giving Chuck the car, reducing the chance that Chuck will successfully build a competing chain. If Alice sees 10 blocks built on top of block D without any forks, she can be reasonably assured that it is unlikely for Chuck to mine a competing chain of 10 blocks.

However, if Chuck possesses more than 51% of the mining power, he can successfully execute a reorg regardless of how long Alice waits. This is a fundamental flaw in all proof-of-work systems: the longest-chain rule cannot differentiate between honest and malicious miners. A malicious miner with sufficient computational power can rewrite history to their advantage. Therefore, any proof-of-work system must assume that at least 50% of the honest mining power belongs to honest participants.

Increasing Bitcoin’s throughput can reduce the 51% attack threshold. Bitcoin’s current throughput is about 7 transactions per second, as its blocks are limited to approximately 2.3 MB, allowing for about 4,000 transactions per block. If Bitcoin were scaled to Visa levels, processing 2,000 transactions per second, we would expect blocks to be 285 times larger (655 MB). This naive calculation suggests that the network delay could increase from 1 second to 285 seconds.

In a network with a 285-second delay and an average block creation rate of one block every 600 seconds, there is a 0.475 chance that another block will be created. This means that almost 50% of the blocks will belong to forks. If an attacker wants to double spend a transaction in block B, they would only need to create a 7-block chain instead of 10. To sustain a continuous reorg attack, the attacker must create blocks faster than the main chain but not faster than the entire network. If half of the blocks are forked, only two-thirds of them will be included in the main chain, allowing an attacker to sustain an attack with only 33% of the hashing power.

Thus, by attempting to increase Bitcoin’s throughput, we inadvertently make it more vulnerable to attacks. This is a significant concern and one of the main reasons why Bitcoin’s block size remains small. There is a trade-off between Bitcoin’s throughput and security: as throughput increases, the number of forks rises, and the threshold for reorg attacks decreases to less than 50%.